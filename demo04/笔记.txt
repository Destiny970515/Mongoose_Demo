mongoose 预定义模式修饰符
    mongoose 提供的预定义模式修饰符可以对我们增加的数据进行一些格式化。

如何使用？
例子：
// 定义user数据表（集合）Schema
const UserSchema = mongoose.Schema({
  name: {
    type: String,
    trim: true // 使用了预定义修饰符 trim
  },
  age: Number,
  status: {
    type: Number, // 指定类型
    default: 1    // 指定默认参数
  },
  sex: {
    type: String,
    default: "男"
  }
});

预定义模式修饰符：
lowercase：格式化为小写
uppercase：格式化为大写
trim：两边去除空格

mongoose Getters 与 Setters 自定义修饰符
    除了 mongoose 内置的修饰符以外，我们还可以通过set（建议使用）修饰符在增加数据的时候，
对数据进行格式化。也可以通过get（不建议使用）在“实例获取数据”的时候对数据进行格式化。

通过 set 自定义修饰符
例子：
// 定义user数据表（集合）Schema
const UserSchema = mongoose.Schema({
  name: {
    type: String,
    trim: true // 使用了预定义修饰符 trim
  },
  age: Number,
  status: {
    type: Number, // 指定类型
    default: 1    // 指定默认参数
  },
  sex: {
    type: String,
    default: "男"
  },
  blog: {
    type: String,
    set(params) {         // 通过 set 增加数据的时候对当前字段进行处理
      console.log(params)
      if (!params) {
        return ""
      } else {
        if (params.indexOf("http://") !== 0) {
          return "http://" + params;
        }
        return params;
      }
    }
  }
});





















